<!DOCTYPE html>
<html lang="zh-CN" data-bs-theme="light">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>{% block title %}RSYWX Library{% endblock %}</title>
        <link rel="icon" type="image/x-icon" href="{{ asset('images/favicon.ico') }}">
        
        <!-- Bootstrap 5 CSS -->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
        <!-- Font Awesome for dark mode icons -->
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
        
        {% block stylesheets %}
        <link rel="stylesheet" href="{{ asset('styles/app.css') }}">
        <style>
            body {
                display: flex;
                flex-direction: column;
                min-height: 100vh;
                padding-top: 76px; /* 为固定导航栏留出空间 */
            }
            .navbar-brand {
                font-weight: bold;
                font-size: 1.5rem;
            }
            .book-card {
                transition: transform 0.2s;
                height: 100%;
            }
            .book-card:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            }
            .stats-card {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
            }
            .word-of-day {
                background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
                color: white;
            }
            .search-box {
                max-width: 600px;
            }
            footer {
                margin-top: auto;
            }
            main {
                flex: 1;
            }
        </style>
        {% endblock %}

        {% block javascripts %}
            <!-- Bootstrap 5 JS - loaded first for proper initialization -->
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
            {% block importmap %}{{ importmap('app') }}{% endblock %}
            
            <!-- Auto-initialize Bootstrap dropdowns with proper event handling -->
            <script>
            // Let Bootstrap handle dropdowns automatically - no manual interference<script>
            document.addEventListener('DOMContentLoaded', function() {
                // Wait for Bootstrap to be fully loaded
                setTimeout(function() {
                    // Remove data-bs-toggle to prevent Bootstrap auto-initialization
                    const dropdownToggles = document.querySelectorAll('[data-bs-toggle="dropdown"]');
                    dropdownToggles.forEach(toggle => {
                        toggle.removeAttribute('data-bs-toggle');
                    });
                    
                    // Manual dropdown handling
                    const dropdownButtons = document.querySelectorAll('.dropdown-toggle');
                    dropdownButtons.forEach(button => {
                        button.addEventListener('click', function(e) {
                            e.preventDefault();
                            e.stopPropagation();
                            
                            const dropdownMenu = this.nextElementSibling;
                            if (dropdownMenu && dropdownMenu.classList.contains('dropdown-menu')) {
                                // Close all other dropdowns first
                                document.querySelectorAll('.dropdown-menu.show').forEach(menu => {
                                    if (menu !== dropdownMenu) {
                                        menu.classList.remove('show');
                                    }
                                });
                                
                                // Toggle current dropdown
                                const isShown = dropdownMenu.classList.contains('show');
                                if (isShown) {
                                    dropdownMenu.classList.remove('show');
                                } else {
                                    dropdownMenu.classList.add('show');
                                }
                            }
                        });
                    });
                    
                    // Close dropdowns when clicking outside
                    document.addEventListener('click', function(e) {
                        if (!e.target.closest('.dropdown')) {
                            document.querySelectorAll('.dropdown-menu.show').forEach(menu => {
                                menu.classList.remove('show');
                            });
                        }
                    });
                    
                }, 100);
            });
        </script>
        {% endblock %}
    </head>
    <body>
        {{ include('_header.html.twig') }}

        <!-- Main Content -->
        <main class="container-fluid py-4">
            {% block body %}{% endblock %}
        </main>

        {{ include('_footer.html.twig') }}
    </body>
</html>
